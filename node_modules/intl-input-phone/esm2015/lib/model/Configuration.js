/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ContentOptionsEnum, SortOrderEnum, TooltipOptionsEnum, OutputOptionsEnum } from "./Enums";
import { Injectable } from '@angular/core';
/**
 * Class for configure the dropdown.
 */
export class ConfigurationOptions {
    constructor() {
        /**
         * Prperty to set the selector for the dropdown.
         * Default : 'IntlPhoneNumber'
         */
        this.SelectorClass = "IntlPhoneNumber";
        /**
         * Property to set which content show in option
         * Default : Flag, CountryPhoneCode
         */
        this.OptionTextTypes = [
            ContentOptionsEnum.Flag,
            ContentOptionsEnum.CountryPhoneCode
        ];
        /**
         * Property to set the tooltip text
         * Default : Country Name
         */
        this.ToolTipText = TooltipOptionsEnum.CountryName;
        /**
         * Property to set whether tooltip is show or not.
         * Default : true
         */
        this.IsShowToolTip = true;
        /**
         * Property to set whether user want search option or not.
         * Default : true
         */
        this.IsShowSearchOption = true;
        /**
         * Property to set the sort order of country list to be rendered.
         * Default : CountryISOCode
         */
        this.SortBy = SortOrderEnum.CountryISOCode;
        /**
         * Property to set whether show all other country in dropdown as well or not, when specify custom country list in module.
         * Default : true
         */
        this.IsShowAllOtherCountry = true;
        /**
         * Property to set in which format user want the output when fill the input correctly.
         * Default : NumberWithCountryCode
         */
        this.OutputFormat = OutputOptionsEnum.NumberWithCountryCode;
    }
}
ConfigurationOptions.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * Prperty to set the selector for the dropdown.
     * Default : 'IntlPhoneNumber'
     * @type {?}
     */
    ConfigurationOptions.prototype.SelectorClass;
    /**
     * Property to set which content show in option
     * Default : Flag, CountryPhoneCode
     * @type {?}
     */
    ConfigurationOptions.prototype.OptionTextTypes;
    /**
     * Property to set the tooltip text
     * Default : Country Name
     * @type {?}
     */
    ConfigurationOptions.prototype.ToolTipText;
    /**
     * Property to set whether tooltip is show or not.
     * Default : true
     * @type {?}
     */
    ConfigurationOptions.prototype.IsShowToolTip;
    /**
     * Property to set whether user want search option or not.
     * Default : true
     * @type {?}
     */
    ConfigurationOptions.prototype.IsShowSearchOption;
    /**
     * Property to set the sort order of country list to be rendered.
     * Default : CountryISOCode
     * @type {?}
     */
    ConfigurationOptions.prototype.SortBy;
    /**
     * Property to set whether show all other country in dropdown as well or not, when specify custom country list in module.
     * Default : true
     * @type {?}
     */
    ConfigurationOptions.prototype.IsShowAllOtherCountry;
    /**
     * Property to set in which format user want the output when fill the input correctly.
     * Default : NumberWithCountryCode
     * @type {?}
     */
    ConfigurationOptions.prototype.OutputFormat;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZmlndXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2ludGwtaW5wdXQtcGhvbmUvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvQ29uZmlndXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxrQkFBa0IsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNuRyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBTTNDLE1BQU0sT0FBTyxvQkFBb0I7SUFEakM7Ozs7O1FBT1Msa0JBQWEsR0FBWSxpQkFBaUIsQ0FBQzs7Ozs7UUFNM0Msb0JBQWUsR0FBeUI7WUFDN0Msa0JBQWtCLENBQUMsSUFBSTtZQUN2QixrQkFBa0IsQ0FBQyxnQkFBZ0I7U0FDcEMsQ0FBQzs7Ozs7UUFNSyxnQkFBVyxHQUF1QixrQkFBa0IsQ0FBQyxXQUFXLENBQUM7Ozs7O1FBTWpFLGtCQUFhLEdBQWEsSUFBSSxDQUFDOzs7OztRQU0vQix1QkFBa0IsR0FBYSxJQUFJLENBQUM7Ozs7O1FBTXBDLFdBQU0sR0FBbUIsYUFBYSxDQUFDLGNBQWMsQ0FBQzs7Ozs7UUFPdEQsMEJBQXFCLEdBQWEsSUFBSSxDQUFDOzs7OztRQU12QyxpQkFBWSxHQUF1QixpQkFBaUIsQ0FBQyxxQkFBcUIsQ0FBQztJQUVwRixDQUFDOzs7WUF2REEsVUFBVTs7Ozs7Ozs7SUFPVCw2Q0FBa0Q7Ozs7OztJQU1sRCwrQ0FHRTs7Ozs7O0lBTUYsMkNBQXdFOzs7Ozs7SUFNeEUsNkNBQXNDOzs7Ozs7SUFNdEMsa0RBQTJDOzs7Ozs7SUFNM0Msc0NBQTZEOzs7Ozs7SUFPN0QscURBQThDOzs7Ozs7SUFNOUMsNENBQWtGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudE9wdGlvbnNFbnVtLCBTb3J0T3JkZXJFbnVtLCBUb29sdGlwT3B0aW9uc0VudW0sIE91dHB1dE9wdGlvbnNFbnVtIH0gZnJvbSBcIi4vRW51bXNcIjtcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIENsYXNzIGZvciBjb25maWd1cmUgdGhlIGRyb3Bkb3duLlxyXG4gKi9cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvbk9wdGlvbnMge1xyXG5cclxuICAvKipcclxuICAgKiBQcnBlcnR5IHRvIHNldCB0aGUgc2VsZWN0b3IgZm9yIHRoZSBkcm9wZG93bi5cclxuICAgKiBEZWZhdWx0IDogJ0ludGxQaG9uZU51bWJlcidcclxuICAgKi9cclxuICBwdWJsaWMgU2VsZWN0b3JDbGFzcyA6IHN0cmluZyA9IFwiSW50bFBob25lTnVtYmVyXCI7XHJcblxyXG4gIC8qKlxyXG4gICAqIFByb3BlcnR5IHRvIHNldCB3aGljaCBjb250ZW50IHNob3cgaW4gb3B0aW9uXHJcbiAgICogRGVmYXVsdCA6IEZsYWcsIENvdW50cnlQaG9uZUNvZGVcclxuICAgKi9cclxuICBwdWJsaWMgT3B0aW9uVGV4dFR5cGVzOiBDb250ZW50T3B0aW9uc0VudW1bXSA9IFtcclxuICAgIENvbnRlbnRPcHRpb25zRW51bS5GbGFnLFxyXG4gICAgQ29udGVudE9wdGlvbnNFbnVtLkNvdW50cnlQaG9uZUNvZGVcclxuICBdO1xyXG5cclxuICAvKipcclxuICAgKiBQcm9wZXJ0eSB0byBzZXQgdGhlIHRvb2x0aXAgdGV4dFxyXG4gICAqIERlZmF1bHQgOiBDb3VudHJ5IE5hbWVcclxuICAgKi9cclxuICBwdWJsaWMgVG9vbFRpcFRleHQ6IFRvb2x0aXBPcHRpb25zRW51bSA9IFRvb2x0aXBPcHRpb25zRW51bS5Db3VudHJ5TmFtZTtcclxuXHJcbiAgLyoqXHJcbiAgICogUHJvcGVydHkgdG8gc2V0IHdoZXRoZXIgdG9vbHRpcCBpcyBzaG93IG9yIG5vdC5cclxuICAgKiBEZWZhdWx0IDogdHJ1ZVxyXG4gICAqL1xyXG4gIHB1YmxpYyBJc1Nob3dUb29sVGlwIDogYm9vbGVhbiA9IHRydWU7XHJcblxyXG4gIC8qKlxyXG4gICAqIFByb3BlcnR5IHRvIHNldCB3aGV0aGVyIHVzZXIgd2FudCBzZWFyY2ggb3B0aW9uIG9yIG5vdC5cclxuICAgKiBEZWZhdWx0IDogdHJ1ZVxyXG4gICAqL1xyXG4gIHB1YmxpYyBJc1Nob3dTZWFyY2hPcHRpb24gOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgLyoqXHJcbiAgICogUHJvcGVydHkgdG8gc2V0IHRoZSBzb3J0IG9yZGVyIG9mIGNvdW50cnkgbGlzdCB0byBiZSByZW5kZXJlZC5cclxuICAgKiBEZWZhdWx0IDogQ291bnRyeUlTT0NvZGVcclxuICAgKi9cclxuICBwdWJsaWMgU29ydEJ5IDogU29ydE9yZGVyRW51bSA9IFNvcnRPcmRlckVudW0uQ291bnRyeUlTT0NvZGU7XHJcblxyXG5cclxuICAvKipcclxuICAgKiBQcm9wZXJ0eSB0byBzZXQgd2hldGhlciBzaG93IGFsbCBvdGhlciBjb3VudHJ5IGluIGRyb3Bkb3duIGFzIHdlbGwgb3Igbm90LCB3aGVuIHNwZWNpZnkgY3VzdG9tIGNvdW50cnkgbGlzdCBpbiBtb2R1bGUuXHJcbiAgICogRGVmYXVsdCA6IHRydWVcclxuICAgKi9cclxuICBwdWJsaWMgSXNTaG93QWxsT3RoZXJDb3VudHJ5IDogYm9vbGVhbiA9IHRydWU7XHJcblxyXG4gIC8qKlxyXG4gICAqIFByb3BlcnR5IHRvIHNldCBpbiB3aGljaCBmb3JtYXQgdXNlciB3YW50IHRoZSBvdXRwdXQgd2hlbiBmaWxsIHRoZSBpbnB1dCBjb3JyZWN0bHkuXHJcbiAgICogRGVmYXVsdCA6IE51bWJlcldpdGhDb3VudHJ5Q29kZVxyXG4gICAqL1xyXG4gIHB1YmxpYyBPdXRwdXRGb3JtYXQgOiBPdXRwdXRPcHRpb25zRW51bSA9IE91dHB1dE9wdGlvbnNFbnVtLk51bWJlcldpdGhDb3VudHJ5Q29kZTtcclxuXHJcbn1cclxuIl19