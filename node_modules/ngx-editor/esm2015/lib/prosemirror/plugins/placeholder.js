import { Plugin, PluginKey } from 'prosemirror-state';
import { DecorationSet, Decoration } from 'prosemirror-view';
const DEFAULT_PLACEHOLDER = 'Type Here...';
function placeholderPlugin(text = DEFAULT_PLACEHOLDER) {
    return new Plugin({
        key: new PluginKey('placeholder'),
        props: {
            decorations(state) {
                const doc = state.doc;
                if (doc.childCount === 1 && doc.firstChild.isTextblock && doc.firstChild.content.size === 0) {
                    const placeHolderEl = document.createElement('span');
                    placeHolderEl.classList.add('NgxEditor-Placeholder');
                    placeHolderEl.textContent = text;
                    return DecorationSet.create(doc, [Decoration.widget(1, placeHolderEl)]);
                }
                return DecorationSet.empty;
            }
        }
    });
}
export default placeholderPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3Byb3NlbWlycm9yL3BsdWdpbnMvcGxhY2Vob2xkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBZSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTdELE1BQU0sbUJBQW1CLEdBQUcsY0FBYyxDQUFDO0FBRTNDLFNBQVMsaUJBQWlCLENBQUMsT0FBZSxtQkFBbUI7SUFDM0QsT0FBTyxJQUFJLE1BQU0sQ0FBQztRQUNoQixHQUFHLEVBQUUsSUFBSSxTQUFTLENBQUMsYUFBYSxDQUFDO1FBQ2pDLEtBQUssRUFBRTtZQUNMLFdBQVcsQ0FBQyxLQUFrQjtnQkFDNUIsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQztnQkFFdEIsSUFBSSxHQUFHLENBQUMsVUFBVSxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUFFO29CQUMzRixNQUFNLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUNyRCxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO29CQUNyRCxhQUFhLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztvQkFDakMsT0FBTyxhQUFhLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDekU7Z0JBRUQsT0FBTyxhQUFhLENBQUMsS0FBSyxDQUFDO1lBQzdCLENBQUM7U0FDRjtLQUNGLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxlQUFlLGlCQUFpQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGx1Z2luLCBFZGl0b3JTdGF0ZSwgUGx1Z2luS2V5IH0gZnJvbSAncHJvc2VtaXJyb3Itc3RhdGUnO1xuaW1wb3J0IHsgRGVjb3JhdGlvblNldCwgRGVjb3JhdGlvbiB9IGZyb20gJ3Byb3NlbWlycm9yLXZpZXcnO1xuXG5jb25zdCBERUZBVUxUX1BMQUNFSE9MREVSID0gJ1R5cGUgSGVyZS4uLic7XG5cbmZ1bmN0aW9uIHBsYWNlaG9sZGVyUGx1Z2luKHRleHQ6IHN0cmluZyA9IERFRkFVTFRfUExBQ0VIT0xERVIpIHtcbiAgcmV0dXJuIG5ldyBQbHVnaW4oe1xuICAgIGtleTogbmV3IFBsdWdpbktleSgncGxhY2Vob2xkZXInKSxcbiAgICBwcm9wczoge1xuICAgICAgZGVjb3JhdGlvbnMoc3RhdGU6IEVkaXRvclN0YXRlKSB7XG4gICAgICAgIGNvbnN0IGRvYyA9IHN0YXRlLmRvYztcblxuICAgICAgICBpZiAoZG9jLmNoaWxkQ291bnQgPT09IDEgJiYgZG9jLmZpcnN0Q2hpbGQuaXNUZXh0YmxvY2sgJiYgZG9jLmZpcnN0Q2hpbGQuY29udGVudC5zaXplID09PSAwKSB7XG4gICAgICAgICAgY29uc3QgcGxhY2VIb2xkZXJFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgICBwbGFjZUhvbGRlckVsLmNsYXNzTGlzdC5hZGQoJ05neEVkaXRvci1QbGFjZWhvbGRlcicpO1xuICAgICAgICAgIHBsYWNlSG9sZGVyRWwudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgICAgICAgIHJldHVybiBEZWNvcmF0aW9uU2V0LmNyZWF0ZShkb2MsIFtEZWNvcmF0aW9uLndpZGdldCgxLCBwbGFjZUhvbGRlckVsKV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIERlY29yYXRpb25TZXQuZW1wdHk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcGxhY2Vob2xkZXJQbHVnaW47XG4iXX0=