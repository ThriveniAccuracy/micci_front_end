import { findSelectedNodeOfType, findParentNode } from 'prosemirror-utils';
export var isNodeActive = function (state, type, attrs) {
    if (attrs === void 0) { attrs = {}; }
    var _a = state.selection, $from = _a.$from, to = _a.to;
    var predicate = function (n) { return n.type === type; };
    var node = findSelectedNodeOfType(type)(state.selection) || findParentNode(predicate)(state.selection);
    if (!Object.entries(attrs).length || !node) {
        return !!node;
    }
    // check if heading is active
    return to <= $from.end() && $from.parent.hasMarkup(type, attrs);
};
export default isNodeActive;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNOb2RlQWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9wcm9zZW1pcnJvci9oZWxwZXJzL2lzTm9kZUFjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFM0UsTUFBTSxDQUFDLElBQU0sWUFBWSxHQUFHLFVBQUMsS0FBa0IsRUFBRSxJQUFjLEVBQUUsS0FBVTtJQUFWLHNCQUFBLEVBQUEsVUFBVTtJQUNuRSxJQUFBLG9CQUErQixFQUE3QixnQkFBSyxFQUFFLFVBQXNCLENBQUM7SUFFdEMsSUFBTSxTQUFTLEdBQUcsVUFBQyxDQUFrQixJQUFLLE9BQUEsQ0FBQyxDQUFDLElBQUksS0FBSyxJQUFJLEVBQWYsQ0FBZSxDQUFDO0lBQzFELElBQU0sSUFBSSxHQUFHLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBRXpHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksRUFBRTtRQUMxQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUM7S0FDZjtJQUVELDZCQUE2QjtJQUM3QixPQUFPLEVBQUUsSUFBSSxLQUFLLENBQUMsR0FBRyxFQUFFLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ2xFLENBQUMsQ0FBQztBQUVGLGVBQWUsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWRpdG9yU3RhdGUgfSBmcm9tICdwcm9zZW1pcnJvci1zdGF0ZSc7XG5pbXBvcnQgeyBOb2RlVHlwZSwgTm9kZSBhcyBQcm9zZW1pcnJvck5vZGUgfSBmcm9tICdwcm9zZW1pcnJvci1tb2RlbCc7XG5pbXBvcnQgeyBmaW5kU2VsZWN0ZWROb2RlT2ZUeXBlLCBmaW5kUGFyZW50Tm9kZSB9IGZyb20gJ3Byb3NlbWlycm9yLXV0aWxzJztcblxuZXhwb3J0IGNvbnN0IGlzTm9kZUFjdGl2ZSA9IChzdGF0ZTogRWRpdG9yU3RhdGUsIHR5cGU6IE5vZGVUeXBlLCBhdHRycyA9IHt9KTogYm9vbGVhbiA9PiB7XG4gIGNvbnN0IHsgJGZyb20sIHRvIH0gPSBzdGF0ZS5zZWxlY3Rpb247XG5cbiAgY29uc3QgcHJlZGljYXRlID0gKG46IFByb3NlbWlycm9yTm9kZSkgPT4gbi50eXBlID09PSB0eXBlO1xuICBjb25zdCBub2RlID0gZmluZFNlbGVjdGVkTm9kZU9mVHlwZSh0eXBlKShzdGF0ZS5zZWxlY3Rpb24pIHx8IGZpbmRQYXJlbnROb2RlKHByZWRpY2F0ZSkoc3RhdGUuc2VsZWN0aW9uKTtcblxuICBpZiAoIU9iamVjdC5lbnRyaWVzKGF0dHJzKS5sZW5ndGggfHwgIW5vZGUpIHtcbiAgICByZXR1cm4gISFub2RlO1xuICB9XG5cbiAgLy8gY2hlY2sgaWYgaGVhZGluZyBpcyBhY3RpdmVcbiAgcmV0dXJuIHRvIDw9ICRmcm9tLmVuZCgpICYmICRmcm9tLnBhcmVudC5oYXNNYXJrdXAodHlwZSwgYXR0cnMpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgaXNOb2RlQWN0aXZlO1xuIl19