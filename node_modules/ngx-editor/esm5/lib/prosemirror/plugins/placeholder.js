import { Plugin, PluginKey } from 'prosemirror-state';
import { DecorationSet, Decoration } from 'prosemirror-view';
var DEFAULT_PLACEHOLDER = 'Type Here...';
function placeholderPlugin(text) {
    if (text === void 0) { text = DEFAULT_PLACEHOLDER; }
    return new Plugin({
        key: new PluginKey('placeholder'),
        props: {
            decorations: function (state) {
                var doc = state.doc;
                if (doc.childCount === 1 && doc.firstChild.isTextblock && doc.firstChild.content.size === 0) {
                    var placeHolderEl = document.createElement('span');
                    placeHolderEl.classList.add('NgxEditor-Placeholder');
                    placeHolderEl.textContent = text;
                    return DecorationSet.create(doc, [Decoration.widget(1, placeHolderEl)]);
                }
                return DecorationSet.empty;
            }
        }
    });
}
export default placeholderPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3Byb3NlbWlycm9yL3BsdWdpbnMvcGxhY2Vob2xkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBZSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTdELElBQU0sbUJBQW1CLEdBQUcsY0FBYyxDQUFDO0FBRTNDLFNBQVMsaUJBQWlCLENBQUMsSUFBa0M7SUFBbEMscUJBQUEsRUFBQSwwQkFBa0M7SUFDM0QsT0FBTyxJQUFJLE1BQU0sQ0FBQztRQUNoQixHQUFHLEVBQUUsSUFBSSxTQUFTLENBQUMsYUFBYSxDQUFDO1FBQ2pDLEtBQUssRUFBRTtZQUNMLFdBQVcsRUFBWCxVQUFZLEtBQWtCO2dCQUM1QixJQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDO2dCQUV0QixJQUFJLEdBQUcsQ0FBQyxVQUFVLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsV0FBVyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7b0JBQzNGLElBQU0sYUFBYSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBQ3JELGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUM7b0JBQ3JELGFBQWEsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO29CQUNqQyxPQUFPLGFBQWEsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUN6RTtnQkFFRCxPQUFPLGFBQWEsQ0FBQyxLQUFLLENBQUM7WUFDN0IsQ0FBQztTQUNGO0tBQ0YsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELGVBQWUsaUJBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbHVnaW4sIEVkaXRvclN0YXRlLCBQbHVnaW5LZXkgfSBmcm9tICdwcm9zZW1pcnJvci1zdGF0ZSc7XG5pbXBvcnQgeyBEZWNvcmF0aW9uU2V0LCBEZWNvcmF0aW9uIH0gZnJvbSAncHJvc2VtaXJyb3Itdmlldyc7XG5cbmNvbnN0IERFRkFVTFRfUExBQ0VIT0xERVIgPSAnVHlwZSBIZXJlLi4uJztcblxuZnVuY3Rpb24gcGxhY2Vob2xkZXJQbHVnaW4odGV4dDogc3RyaW5nID0gREVGQVVMVF9QTEFDRUhPTERFUikge1xuICByZXR1cm4gbmV3IFBsdWdpbih7XG4gICAga2V5OiBuZXcgUGx1Z2luS2V5KCdwbGFjZWhvbGRlcicpLFxuICAgIHByb3BzOiB7XG4gICAgICBkZWNvcmF0aW9ucyhzdGF0ZTogRWRpdG9yU3RhdGUpIHtcbiAgICAgICAgY29uc3QgZG9jID0gc3RhdGUuZG9jO1xuXG4gICAgICAgIGlmIChkb2MuY2hpbGRDb3VudCA9PT0gMSAmJiBkb2MuZmlyc3RDaGlsZC5pc1RleHRibG9jayAmJiBkb2MuZmlyc3RDaGlsZC5jb250ZW50LnNpemUgPT09IDApIHtcbiAgICAgICAgICBjb25zdCBwbGFjZUhvbGRlckVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgIHBsYWNlSG9sZGVyRWwuY2xhc3NMaXN0LmFkZCgnTmd4RWRpdG9yLVBsYWNlaG9sZGVyJyk7XG4gICAgICAgICAgcGxhY2VIb2xkZXJFbC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgICAgICAgcmV0dXJuIERlY29yYXRpb25TZXQuY3JlYXRlKGRvYywgW0RlY29yYXRpb24ud2lkZ2V0KDEsIHBsYWNlSG9sZGVyRWwpXSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gRGVjb3JhdGlvblNldC5lbXB0eTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBwbGFjZWhvbGRlclBsdWdpbjtcbiJdfQ==