import { __decorate } from "tslib";
import { Component, ViewChild, forwardRef, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { EditorState } from 'prosemirror-state';
import { EditorView } from 'prosemirror-view';
import { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';
import schema from './schema';
var NgxEditorComponent = /** @class */ (function () {
    function NgxEditorComponent(ngxEditorService) {
        this.config = ngxEditorService.config;
    }
    NgxEditorComponent_1 = NgxEditorComponent;
    NgxEditorComponent.prototype.writeValue = function (value) {
        if (!value) {
            return;
        }
        this.updateContent(value);
    };
    NgxEditorComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    NgxEditorComponent.prototype.registerOnTouched = function () { };
    NgxEditorComponent.prototype.parseDoc = function (contentJson) {
        return schema.nodeFromJSON(contentJson);
    };
    NgxEditorComponent.prototype.updateContent = function (value) {
        try {
            var doc = this.parseDoc(value);
            var state = this.view.state;
            var tr = state.tr;
            tr.replaceWith(0, state.doc.content.size, doc);
            this.view.dispatch(tr);
        }
        catch (err) {
            console.error('Unable to update document.', err);
        }
    };
    NgxEditorComponent.prototype.handleTransactions = function (tr) {
        var state = this.view.state.applyTransaction(tr).state;
        this.view.updateState(state);
        if (tr.docChanged) {
            var json = state.doc.toJSON();
            this.onChange(json);
        }
    };
    NgxEditorComponent.prototype.createEditor = function () {
        this.view = new EditorView(this.ngxEditor.nativeElement, {
            state: EditorState.create({
                schema: schema,
                plugins: this.config.plugins,
            }),
            dispatchTransaction: this.handleTransactions.bind(this),
            attributes: {
                class: 'NgxEditor-Content'
            },
        });
    };
    NgxEditorComponent.prototype.ngOnInit = function () {
        this.createEditor();
    };
    NgxEditorComponent.prototype.ngOnDestroy = function () {
        this.view.destroy();
    };
    var NgxEditorComponent_1;
    NgxEditorComponent.ctorParameters = function () { return [
        { type: NgxEditorService }
    ]; };
    __decorate([
        ViewChild('ngxEditor', { static: true })
    ], NgxEditorComponent.prototype, "ngxEditor", void 0);
    NgxEditorComponent = NgxEditorComponent_1 = __decorate([
        Component({
            selector: 'ngx-editor',
            template: "<div class=\"NgxEditor-Wrapper\" #ngxEditor></div>\n",
            providers: [{
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return NgxEditorComponent_1; }),
                    multi: true
                }],
            encapsulation: ViewEncapsulation.None,
            styles: [".ProseMirror{outline:0}.NgxEditor-Wrapper{background:padding-box #fff;color:#000;border-radius:4px;border:2px solid rgba(0,0,0,.2)}.NgxEditor-MenuBar{display:flex;padding:.2rem;border-bottom:1px solid #ddd}.NgxEditor-MenuBar .NgxEditor-MenuItem{display:flex;align-items:center;justify-content:center}.NgxEditor-MenuBar .NgxEditor-MenuItem:hover{cursor:pointer;background-color:#f1f1f1}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;margin-right:2px}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Icon.NgxEditor-MenuItem__Active{background-color:#e8f0fe}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Icon.NgxEditor-MenuItem__Active svg{fill:#1a73e8}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper{position:relative;max-width:100px;width:100%;justify-content:start}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper .NgxEditor-MenuItem__Dropdown{display:flex;align-items:center;width:100%}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper .NgxEditor-MenuItem__Dropdown .NgxEditor-MenuItem__Dropdown-Text{margin-left:5px}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper .NgxEditor-MenuItem__Dropdown .NgxEditor-MenuItem__Dropdown-Icon{margin-left:auto;position:relative;top:2px}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper .NgxEditor-MenuItem__Dropdown-Menu{position:absolute;left:0;top:30px;box-shadow:rgba(60,64,67,.15) 0 2px 6px 2px;border-radius:4px;background-color:#fff;display:none}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper .NgxEditor-MenuItem__Dropdown-Menu .NgxEditor-MenuItem__Dropdown-Item{cursor:pointer;padding:.5rem 1rem;white-space:nowrap}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper .NgxEditor-MenuItem__Dropdown-Menu .NgxEditor-MenuItem__Dropdown-Item.NgxEditor-MenuItem__active,.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper .NgxEditor-MenuItem__Dropdown-Menu .NgxEditor-MenuItem__Dropdown-Item:hover{background-color:#f1f1f1}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper.NgxEditor-MenuItem__Dropdown-Wrapper-Open,.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper.NgxEditor-MenuItem__Dropdown-Wrapper-Selected{background-color:#e8f0fe;color:#1a73e8}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper.NgxEditor-MenuItem__Dropdown-Wrapper-Open .NgxEditor-MenuItem__Dropdown-Icon svg{fill:#1a73e8}.NgxEditor-MenuBar .NgxEditor-MenuItem.NgxEditor-MenuItem__Dropdown-Wrapper.NgxEditor-MenuItem__Dropdown-Wrapper-Open .NgxEditor-MenuItem__Dropdown-Menu{display:block;color:initial}.NgxEditor-MenuBar .NgxEditor-MenuItem__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor-Content{padding:.5rem;white-space:pre-wrap}.NgxEditor-Content p{margin:0 0 .7rem}.NgxEditor-Placeholder{color:#6c757d;opacity:1}"]
        })
    ], NgxEditorComponent);
    return NgxEditorComponent;
}());
export { NgxEditorComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVkaXRvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL25neC1lZGl0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUFFLFNBQVMsRUFDYixVQUFVLEVBQXFCLGlCQUFpQixFQUN4RCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsaUJBQWlCLEVBQXdCLE1BQU0sZ0JBQWdCLENBQUM7QUFFekUsT0FBTyxFQUFFLFdBQVcsRUFBZSxNQUFNLG1CQUFtQixDQUFDO0FBQzdELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUc5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVoRixPQUFPLE1BQU0sTUFBTSxVQUFVLENBQUM7QUFjOUI7SUFRRSw0QkFBWSxnQkFBa0M7UUFDNUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUM7SUFDeEMsQ0FBQzsyQkFWVSxrQkFBa0I7SUFZN0IsdUNBQVUsR0FBVixVQUFXLEtBQW9CO1FBQzdCLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixPQUFPO1NBQ1I7UUFFRCxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCw2Q0FBZ0IsR0FBaEIsVUFBaUIsRUFBTztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsOENBQWlCLEdBQWpCLGNBQTRCLENBQUM7SUFFckIscUNBQVEsR0FBaEIsVUFBaUIsV0FBbUI7UUFDbEMsT0FBTyxNQUFNLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFTywwQ0FBYSxHQUFyQixVQUFzQixLQUFhO1FBQ2pDLElBQUk7WUFDRixJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBRWpDLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQzlCLElBQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDcEIsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQy9DLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ3hCO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixPQUFPLENBQUMsS0FBSyxDQUFDLDRCQUE0QixFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ2xEO0lBQ0gsQ0FBQztJQUVPLCtDQUFrQixHQUExQixVQUEyQixFQUFlO1FBQ2hDLElBQUEsa0RBQUssQ0FBMEM7UUFFdkQsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFN0IsSUFBSSxFQUFFLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNyQjtJQUNILENBQUM7SUFFRCx5Q0FBWSxHQUFaO1FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRTtZQUN2RCxLQUFLLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQztnQkFDeEIsTUFBTSxRQUFBO2dCQUNOLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU87YUFDN0IsQ0FBQztZQUNGLG1CQUFtQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3ZELFVBQVUsRUFBRTtnQkFDVixLQUFLLEVBQUUsbUJBQW1CO2FBQzNCO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELHFDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVELHdDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3RCLENBQUM7OztnQkFqRTZCLGdCQUFnQjs7SUFQSjtRQUF6QyxTQUFTLENBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO3lEQUF1QjtJQURyRCxrQkFBa0I7UUFaOUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFlBQVk7WUFDdEIsZ0VBQXdDO1lBRXhDLFNBQVMsRUFBRSxDQUFDO29CQUNWLE9BQU8sRUFBRSxpQkFBaUI7b0JBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLG9CQUFrQixFQUFsQixDQUFrQixDQUFDO29CQUNqRCxLQUFLLEVBQUUsSUFBSTtpQkFDWixDQUFDO1lBQ0YsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O1NBQ3RDLENBQUM7T0FFVyxrQkFBa0IsQ0EwRTlCO0lBQUQseUJBQUM7Q0FBQSxBQTFFRCxJQTBFQztTQTFFWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsIFZpZXdDaGlsZCwgRWxlbWVudFJlZixcbiAgSW5wdXQsIGZvcndhcmRSZWYsIE9uRGVzdHJveSwgT25Jbml0LCBWaWV3RW5jYXBzdWxhdGlvblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SLCBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgRWRpdG9yU3RhdGUsIFRyYW5zYWN0aW9uIH0gZnJvbSAncHJvc2VtaXJyb3Itc3RhdGUnO1xuaW1wb3J0IHsgRWRpdG9yVmlldyB9IGZyb20gJ3Byb3NlbWlycm9yLXZpZXcnO1xuaW1wb3J0IHsgTm9kZSBhcyBQcm9zZW1pcnJvck5vZGUgfSBmcm9tICdwcm9zZW1pcnJvci1tb2RlbCc7XG5cbmltcG9ydCB7IE5neEVkaXRvclNlcnZpY2UsIE5neEVkaXRvclNlcnZpY2VDb25maWcgfSBmcm9tICcuL25neC1lZGl0b3Iuc2VydmljZSc7XG5cbmltcG9ydCBzY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtZWRpdG9yJyxcbiAgdGVtcGxhdGVVcmw6ICduZ3gtZWRpdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ25neC1lZGl0b3IuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbe1xuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IE5neEVkaXRvckNvbXBvbmVudCksXG4gICAgbXVsdGk6IHRydWVcbiAgfV0sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5cbmV4cG9ydCBjbGFzcyBOZ3hFZGl0b3JDb21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciwgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBAVmlld0NoaWxkKCduZ3hFZGl0b3InLCB7IHN0YXRpYzogdHJ1ZSB9KSBuZ3hFZGl0b3I6IEVsZW1lbnRSZWY7XG5cbiAgcHJpdmF0ZSB2aWV3OiBFZGl0b3JWaWV3O1xuICBwcml2YXRlIG9uQ2hhbmdlOiAodmFsdWU6IG9iamVjdCkgPT4gdm9pZDtcblxuICBwcml2YXRlIGNvbmZpZzogTmd4RWRpdG9yU2VydmljZUNvbmZpZztcblxuICBjb25zdHJ1Y3RvcihuZ3hFZGl0b3JTZXJ2aWNlOiBOZ3hFZGl0b3JTZXJ2aWNlKSB7XG4gICAgdGhpcy5jb25maWcgPSBuZ3hFZGl0b3JTZXJ2aWNlLmNvbmZpZztcbiAgfVxuXG4gIHdyaXRlVmFsdWUodmFsdWU6IG9iamVjdCB8IG51bGwpIHtcbiAgICBpZiAoIXZhbHVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy51cGRhdGVDb250ZW50KHZhbHVlKTtcbiAgfVxuXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25DaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKCk6IHZvaWQgeyB9XG5cbiAgcHJpdmF0ZSBwYXJzZURvYyhjb250ZW50SnNvbjogb2JqZWN0KTogUHJvc2VtaXJyb3JOb2RlIHtcbiAgICByZXR1cm4gc2NoZW1hLm5vZGVGcm9tSlNPTihjb250ZW50SnNvbik7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUNvbnRlbnQodmFsdWU6IG9iamVjdCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBkb2MgPSB0aGlzLnBhcnNlRG9jKHZhbHVlKTtcblxuICAgICAgY29uc3Qgc3RhdGUgPSB0aGlzLnZpZXcuc3RhdGU7XG4gICAgICBjb25zdCB0ciA9IHN0YXRlLnRyO1xuICAgICAgdHIucmVwbGFjZVdpdGgoMCwgc3RhdGUuZG9jLmNvbnRlbnQuc2l6ZSwgZG9jKTtcbiAgICAgIHRoaXMudmlldy5kaXNwYXRjaCh0cik7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gdXBkYXRlIGRvY3VtZW50LicsIGVycik7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBoYW5kbGVUcmFuc2FjdGlvbnModHI6IFRyYW5zYWN0aW9uKSB7XG4gICAgY29uc3QgeyBzdGF0ZSB9ID0gdGhpcy52aWV3LnN0YXRlLmFwcGx5VHJhbnNhY3Rpb24odHIpO1xuXG4gICAgdGhpcy52aWV3LnVwZGF0ZVN0YXRlKHN0YXRlKTtcblxuICAgIGlmICh0ci5kb2NDaGFuZ2VkKSB7XG4gICAgICBjb25zdCBqc29uID0gc3RhdGUuZG9jLnRvSlNPTigpO1xuICAgICAgdGhpcy5vbkNoYW5nZShqc29uKTtcbiAgICB9XG4gIH1cblxuICBjcmVhdGVFZGl0b3IoKSB7XG4gICAgdGhpcy52aWV3ID0gbmV3IEVkaXRvclZpZXcodGhpcy5uZ3hFZGl0b3IubmF0aXZlRWxlbWVudCwge1xuICAgICAgc3RhdGU6IEVkaXRvclN0YXRlLmNyZWF0ZSh7XG4gICAgICAgIHNjaGVtYSxcbiAgICAgICAgcGx1Z2luczogdGhpcy5jb25maWcucGx1Z2lucyxcbiAgICAgIH0pLFxuICAgICAgZGlzcGF0Y2hUcmFuc2FjdGlvbjogdGhpcy5oYW5kbGVUcmFuc2FjdGlvbnMuYmluZCh0aGlzKSxcbiAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgY2xhc3M6ICdOZ3hFZGl0b3ItQ29udGVudCdcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNyZWF0ZUVkaXRvcigpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy52aWV3LmRlc3Ryb3koKTtcbiAgfVxufVxuIl19